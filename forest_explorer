#include <kipr/wombat.h>
//VARIABLES
int speed = 60;// robot will move at 60% of power
int lmotor = 3;// left motor is plugged into port #3
int rmotor = 0;// right motor is plugged into port #0
int slowpause = 2000; // 2 seconds-  how long we want our robot to move backwards for
int pause = 2100; // 2.1 seconds - time needed to make an about perfect 90 or 180 degree turn

//DECLARE FUNCTIONS
void forward(); // function to move forward endlessly 
void back(); // function to move backward for 2 seconds
void right_turn(); // function to turn 90 degrees to the right
void flip();  // function to turn 180 degrees(flip to the opposite way)
int main()
{
    int counter = 0; // a local variable used to keep track of how many times the sensors are touched 
    shut_down_in(300); // main will stop running after 5 minutes
    while(1){ // loop that runs until all the motors are shut down
        forward(); // move forward until 
        if(counter < 5){ // if the sensors were touched less than 5 times it will go through these if statements for the default escape:
        	if(digital(0)==1 ){ // if the sensor plugged into port #0 is touched...
            	back(); // move backward for 2 seconds
            	right_turn(); // turn 90 degrees
            	counter++; // the # of times the sensors are touched increases by 1
        	}
        	if(digital(1)==1){ // if the sensor plugged into port #1 is touched...
            	back(); // move backward for 2 seconds
            	right_turn(); // turn 90 degrees
            	counter++; // the # of times the sensors are touched increases by 1
        	}
        }
        else if(counter == 5){ // if the sensors were touched 5 times it will go through these if statements for the random escape:
            if(digital(0)==1 ){ // if the sensor plugged into port #0 is touched...
            	back(); // move backward for 2 seconds
            	flip(); // turn 180 degrees(flip to the opposite way)
            	counter = 0; // reset the # of times the sensors were touched back to 0 so it could run the default escape
        	}
        	if(digital(1)==1){ // if the sensor plugged into port #1 is touched...
            	back(); // move backward for 2 seconds
            	flip(); // turn 180 degrees(flip to the opposite way)
            	counter = 0; // reset the # of times the sensors were touched back to 0 so it could run the default escape
        	}
        }
        
    }
    return 0; // end main function
}
//DEFINE FUNCTIONS
void forward() // move forward endlessly( this is due to the absence of msleep() )
{
    printf("Moving forwards\n"); //prints that the robot is moving forwards and then skips a line
    motor(lmotor, speed); // the left motor which is plugged into port #3 moves at 60% power
    motor(rmotor, speed); // the right motor which is plugged into port #0 also moves at 60% power, making the robot move forward
}
void right_turn() // turn 90 degrees to the right
{
    printf("Turning right\n"); // prints that the robot is turning right and then skips a line
    motor(lmotor, speed); // the left motor which is plugged into port #3 moves at 60% power
    motor(rmotor, rmotor); // the right motor which is plugged into port #0 stays stationary
    msleep(pause); // the left motor stops moving after 2.1 seconds(time needed to make an about perfect, pivotal 90 degree turn)
}
void back() // move backward for 2 seconds
{
    printf("Moving backwards\n"); // prints that the robot is moving backwards and then skips a line
    motor(lmotor, -speed); // the left motor which is plugged into port #3 goes in reverse at 60% power
    motor(rmotor, -speed); // the right motor which is plugged into port #0 goes in reverse at 60% power
    msleep(slowpause); // the motors stop moving after 2 seconds
}
void flip() // turn 180 degrees(flip to the opposite way)
{
    printf("Flipping 180 degrees\n"); // prints that the robot is flipping 180 degrees and then skips a line
    motor(lmotor, -speed); // the left motor which is plugged into port #3 goes in reverse at 60% power
    motor(rmotor, speed); // the right motor which is plugged into port #0 moves at 60% power, but forwards
    msleep(pause); // the motors stop moving after 2 seconds( time needed to make an about perfect, still 180 degree turn)
}
